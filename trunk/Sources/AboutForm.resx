<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wz78w0AcxEI8xERcxJkbEAA7
</value>
  </data>
</root>